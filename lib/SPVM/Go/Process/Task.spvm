# Copyright (c) 2023 Yuki Kimoto
# MIT License

class Go::Process::Task {
  
  static method new : Go::Process::Task () {
    
    my $self = new Go::Process::Task;
    
    return $self;
  }
  
  method : void () {
    
    while (1) {
      
      my $process = $self->{process};
      
      my $schedule = $process->schedule;
      
      my $process_task_coroutine = $process->task_coroutine;
      
      my $coroutine = (Go::Coroutine)$process->coroutine_queue->dequeue;
      
      if ($coroutine) {
        $process->set_current_coroutine($coroutine);
        Go::Coroutine->transfer($process_task_coroutine, $coroutine);
      }
      else {
        my $return_back = $schedule->return_back;
        Go::Coroutine->transfer($process_task_coroutine, $return_back);
      }
    }
    
  }
  
  has process : rw Go::Process;
}

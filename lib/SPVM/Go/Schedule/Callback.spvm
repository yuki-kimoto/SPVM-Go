# Copyright (c) 2023 Yuki Kimoto
# MIT License

class Go::Schedule::Callback {
  use Go::Schedule::Machine;
  
  static method new : Go::Schedule::Callback () {
    
    my $self = new Go::Schedule::Callback;
    
    return $self;
  }
  
  method : void () {
    
    while (1) {
      my $machine = $self->{machine};
      
      unless ($machine) {
        next;
      }
      
      my $process = $machine->process;
      
      my $shcedule = $process->schedule;
      
      my $schedule_coroutine = $process->schedule_coroutine;
      
      my $coroutine = (Go::Coroutine)$process->coroutine_queue->dequeue;
      
      $machine->set_coroutine($coroutine);
      
      if ($coroutine) {
        Go::Coroutine->transfer($schedule_coroutine, $coroutine);
      }
      else {
        last;
      }
    }
  }
  
  has machine : rw Go::Schedule::Machine;
}

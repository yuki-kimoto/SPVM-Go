# Copyright (c) 2023 Yuki Kimoto
# MIT License

class Go::Schedule {
  use Go::Goroutine;
  use Go::Schedule::Process;
  use Go::Thread;
  use Go::Queue;
  
  has goroutine_queue : Go::Queue of Go::Goroutine;
  
  has idle_process_queue : Go::Queue of Go::Schedule::Process;
  
  has idle_thread_queue : Go::Queue of Go::Thread;
  
  static method new : Go::Schedule () {
    
    my $self = new Go::Schedule;
    
    my $goroutine_queue = Go::Queue->new;
    
    $self->{goroutine_queue} = $goroutine_queue;
    
    return $self;
  }
  
  # Instance Methods
  method enqueue_goroutine : void ($goroutine : Go::Goroutine) {
    
    my $goroutine_queue = $self->{goroutine_queue};
    
    $goroutine_queue->enqueue($goroutine);
  }
  
  method dequeue_goroutine : Go::Goroutine () {
    
    my $goroutine_queue = $self->{goroutine_queue};
    
    my $goroutine = $goroutine_queue->dequeue;
    
    return (Go::Goroutine)$goroutine;
  }
  
}

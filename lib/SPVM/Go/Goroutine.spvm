# Copyright (c) 2023 Yuki Kimoto
# MIT License

class Go::Goroutine : pointer {
  allow Go::Schedule;
  
  use Go::Goroutine::Callback;
  use Go::Channel;
  use Native;
  
  # Interfaces
  interface Go::Queue::Element;
  
  has prev : rw Go::Queue::Element;
  
  has next : rw Go::Queue::Element;
  
  has return_back : Go::Goroutine;
  
  # Enumerations
  enum {
    TYPE_NORMAL,
    TYPE_SCHEDULE,
    TYPE_NATIVE_THREAD,
    TYPE_CHANNEL,
    TYPE_SOCKET,
    TYPE_PIPE,
  }
  
  # Fields
  
  has type : int;
  
  has runnable : byte;
  
  has running : byte;
  
  has callback : Go::Goroutine::Callback;
  
  has exception : ro string;
  
  has error_id : ro int;
  
  has finished : ro int;
  
  # Class Methods
  static method new : Go::Goroutine ($callback :  Go::Goroutine::Callback = undef, $return_back : Go::Goroutine = undef) {
    
    my $self = new Go::Goroutine;
    
    $self->{callback} = $callback;
    
    $self->{return_back} = $return_back;
    
    $self->init_goroutine;
    
    return $self;
  }
  
  native static method transfer : void ($from : Go::Goroutine, $to : Go::Goroutine);
  
  # Instance Methods
  native private method init_goroutine : void ();
  
  native method DESTROY : void ();
}
